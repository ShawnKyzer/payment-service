version: '2'

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper-server:
    image: 'bitnami/zookeeper:latest'
    networks:
      - kafka-net
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka-server:
    hostname: kafka-server
    image: 'bitnami/kafka:latest'
    networks:
      - kafka-net
    ports:
     - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper-server
  postgress:
    hostname: postgress
    image: postgres
    ports:
      -  '5432:5432'
    volumes:
      - ./Database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./Database/accounts.sql:/docker-entrypoint-initdb.d/2-accounts.sql
      - ./Database/custom.sql:/docker-entrypoint-initdb.d/3-custom.sql
    networks:
      - kafka-net
    environment:
      POSTGRES_USER: 'tech'
      POSTGRES_PASSWORD: 'test'
      POSTGRES_DB: 'payments'
  api-producer:
    hostname: api-producer
    build: ./ApiAndProducer
    ports:
      - "9000:8080"
    networks:
      - kafka-net
    volumes:
      - ./ApiAndProducer/bin:/app/
    command: ["./wait-for-it.sh", "postgress:5432","kafka-server:9092","-t","100", "--", "java", "-jar", "app.jar"]
    depends_on:
      - postgress
      - kafka-server
  technical-test-payment-service:
    build: ./TechnicalTestPaymentService
    ports:
      - "9001:8080"
    environment:
      - LOGHOST=http://api-producer:8080/log
      - PAYMENTHOST=http://api-producer:8080/payment
    networks:
      - kafka-net
    volumes:
      - ./TechnicalTestPaymentService/bin:/app/
    command: ["./wait-for-it.sh","postgress:5432","kafka-server:9092","-t","100", "--","java", "-jar", "technical-test-payment-service.jar","server","config_docker.yml"]
    depends_on:
      - postgress
      - kafka-server
      - api-producer
  elk:
    hostname: elk
    image: sebp/elk
    ports:
      - 5601:5601
      - 9200:9200
      - 5044:5044
    expose:
      - 5601
    networks:
      - kafka-net
    command: '/opt/logstash/bin/logstash -e "input { udp { port => 5044 } } output { elasticsearch { hosts => elk } }"'
  logspout:
    image: gliderlabs/logspout:v3
    command: 'udp://elk:5044'
    networks:
      - kafka-net
    links:
      - elk
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    depends_on:
      - postgress
      - kafka-server
      - api-producer
      - elk
